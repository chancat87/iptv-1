XtreamCodesTestAcc()
{
    XtreamCodesList

    Println "请输入服务器的序号"
    while read -p "$i18n_default_cancel" server_num
    do
        case $server_num in
            "") Println "$i18n_canceled...\n" && exit 1
            ;;
            *[!0-9]*) Println "$error $i18n_input_correct_number\n"
            ;;
            *) 
                if [ "$server_num" -gt 0 ] && [ "$server_num" -le "$ips_acc_count" ]
                then
                    ips_index=${ips_acc[server_num-1]}
                    break
                else
                    Println "$error $i18n_input_correct_no\n"
                fi
            ;;
        esac
    done

    Println "请输入测试的频道ID"
    while read -p "$i18n_default_cancel" channel_id
    do
        case $channel_id in
            "") Println "$i18n_canceled...\n" && exit 1
            ;;
            *[!0-9]*) Println "$error $i18n_input_correct_number\n"
            ;;
            *) 
                if [ "$channel_id" -gt 0 ]
                then
                    break
                else
                    Println "$error 请输入正确的频道ID(大于0)\n"
                fi
            ;;
        esac
    done

    chnls=()

    Println "比如 http://username:passsword@127.0.0.1:5555"
    inquirer text_input "输入 FFmpeg 代理: " proxy "$i18n_not_set"

    if [ "$proxy" == "$i18n_not_set" ] 
    then
        proxy_command=""
    else
        proxy_command="-http_proxy $proxy"
        Println "代理服务器如果有正在使用的账号需要排除, 输入代理服务器的 channels.json 链接或本地路径"
        read -p "(默认: 无): " proxy_channels_json
        if [ -n "$proxy_channels_json" ] 
        then
            if [ "${proxy_channels_json:0:1}" == "/" ] 
            then
                proxy_channels=$(< "$proxy_channels_json")
            else
                proxy_channels=$(curl -s -Lm 10 "$proxy_channels_json")
            fi
            while IFS= read -r line 
            do
                if [[ $line == *\"status\":* ]] 
                then
                    line=${line#*: \"}
                    status=${line%\",*}
                elif [[ $line == *\"stream_link\":* ]] && [[ $line == *http://*/*/*/* ]]
                then
                    line=${line#*: \"http://}
                    chnl_domain=${line%%/*}
                    line=${line#*/}
                    chnl_username=${line%%/*}
                    if [ "$chnl_username" == "live" ] 
                    then
                        line=${line#*/}
                        chnl_username=${line%%/*}
                    fi
                    line=${line#*/}
                    chnl_password=${line%%/*}
                elif [[ $line == *\"flv_status\":* ]] 
                then
                    line=${line#*: \"}
                    flv_status=${line%\",*}
                    if [ -n "${chnl_domain:-}" ] 
                    then
                        if [ "$status" == "on" ] || [ "$flv_status" == "on" ]
                        then
                            chnls+=("$chnl_domain/$chnl_username/$chnl_password")
                        fi
                    fi
                    chnl_domain=""
                fi
            done <<< "$proxy_channels"
        fi
    fi

    if [ -e "$CHANNELS_FILE" ] 
    then
        GetChannels
        if [ "$chnls_count" -gt 0 ] 
        then
            for((xc_i=0;xc_i<chnls_count;xc_i++));
            do
                if [ "${chnls_status[xc_i]}" == "on" ] || [ "${chnls_flv_status[xc_i]}" == "on" ]
                then
                    if [[ ${chnls_stream_link[xc_i]} =~ ^http://([^/]+)/([^/]+)/([^/]+)/ ]]
                    then
                        if [ "${BASH_REMATCH[2]}" != "live" ] || [[ ${chnls_stream_link[xc_i]} =~ ^http://([^/]+)/live/([^/]+)/([^/]+)/ ]]
                        then
                            chnls+=("${BASH_REMATCH[1]}/${BASH_REMATCH[2]}:${BASH_REMATCH[3]}")
                        fi
                    fi
                fi
            done
        fi
    fi

    IFS="|" read -ra domains <<< "${new_domains[ips_index]}"
    IFS=" " read -ra accounts <<< "${new_accounts[ips_index]}"
    Println "IP: ${green}${ips[ips_index]}${normal} 域名: ${green}${new_domains[ips_index]//|/ }${normal}"
    Println "${green}账号:${normal}"

    FFMPEG_ROOT=$(dirname "$IPTV_ROOT"/ffmpeg-git-*/ffmpeg)
    FFMPEG="$FFMPEG_ROOT/ffmpeg"
    FFPROBE="$FFMPEG_ROOT/ffprobe"

    for account in "${accounts[@]}"
    do
        if [[ $account =~ ^([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$ ]] 
        then
            continue
        fi
        username=${account%%:*}
        account=${account#*:}
        password=${account%%:*}

        for domain in "${domains[@]}"
        do
            for chnl in ${chnls[@]+"${chnls[@]}"}
            do
                if [ "$domain/$username/$password" == "$chnl" ] 
                then
                    # https://f-hauri.ch/vrac/diffU8test.sh
                    printf "${green}%s${normal}\r\033[12C%-21s%-21s\n" "[使用中]" "$username" "$password"
                    continue 2
                fi
            done

            # curl --output /dev/null -m 3 -s --fail -r 0-0
            if $FFPROBE $proxy_command -i "http://$domain/$username/$password/$channel_id" -rw_timeout 5000000 -show_streams -select_streams a -loglevel quiet > /dev/null
            then
                printf "${green}%s${normal}\r\033[12C%-21s%-21s${green}%s${normal}\n%s\n\n" "[成功]" "$username" "$password" "$domain" "http://$domain/$username/$password/$channel_id"
            elif $FFPROBE $proxy_command -i "http://$domain/live/$username/$password/$channel_id.ts" -rw_timeout 5000000 -show_streams -select_streams a -loglevel quiet > /dev/null 
            then
                printf "${green}%s${normal}\r\033[12C%-21s%-21s${green}%s${normal}\n%s\n\n" "[成功]" "$username" "$password" "$domain" "http://$domain/live/$username/$password/$channel_id.ts"
            else
                printf "${red}%s${normal}\r\033[12C%-21s%-21s${red}%s${normal}\n%s" "[失败]" "$username" "$password" "$domain"
            fi
        done
    done
    echo
}
