Start4gtvLink()
{
    if [[ $chnl_stream_link_url =~ \.m3u8$ ]] 
    then
        Println "$error 你的 IP 可能已被禁\n"
        if [ "$monitor" = true ] 
        then
            return 0
        fi
        exit 1
    fi

    chnl_stream_urls=()
    chnl_stream_urls_bitrate=()
    chnl_stream_urls_resolution=()
    chnl_stream_urls_list=""
    chnl_stream_urls_count=0

    while IFS= read -r line 
    do
        if [[ $line =~ RESOLUTION=([^ ]+) ]] 
        then
            chnl_stream_url_resolution=${BASH_REMATCH[1]%%,*}
            chnl_stream_urls_resolution+=("$chnl_stream_url_resolution")
            if [[ $line =~ BANDWIDTH=([^ ]+) ]] 
            then
                chnl_stream_url_bitrate=${BASH_REMATCH[1]%%,*}
                chnl_stream_url_bitrate=$((chnl_stream_url_bitrate/1000))
            else
                chnl_stream_url_bitrate=""
            fi
            chnl_stream_urls_bitrate+=("$chnl_stream_url_bitrate")
            if [ -n "$chnl_stream_url_bitrate" ] 
            then
                chnl_stream_url_bitrate_text=" [ $chnl_stream_url_bitrate k ]"
            else
                chnl_stream_url_bitrate_text=""
            fi
            chnl_stream_urls_count=$((chnl_stream_urls_count+1))
            chnl_stream_urls_list="$chnl_stream_urls_list ${green}$chnl_stream_urls_count.${normal}${indent_6}$chnl_stream_url_resolution$chnl_stream_url_bitrate_text\n\n"
        elif [[ $line =~ m3u8 ]] 
        then
            chnl_stream_urls+=("$chnl_stream_link_url_path/$line")
        fi
    done < <(curl -s -Lm 20 ${_4gtv_proxy_command[@]+"${_4gtv_proxy_command[@]}"} -H "User-Agent: $chnl_user_agent" -H "${chnl_headers:0:-4}" "$chnl_stream_link_url")

    if [ -n "$chnl_stream_urls_list" ] 
    then
        chnl_stream_url_root=${chnl_stream_link%%|*}
        chnl_stream_url_qualities_count=0

        if [[ $chnl_stream_link =~ \|([^|]+)$ ]] 
        then
            choose=0
            chnl_stream_url_quality=${BASH_REMATCH[1]}

            IFS="," read -r -a chnl_stream_url_qualities <<< "$chnl_stream_url_quality"
            chnl_stream_url_qualities_count=${#chnl_stream_url_qualities[@]}

            chnl_stream_url_video_indices=()

            if [ "$monitor" = true ] 
            then
                auto_select=true
            else
                auto_select=false
            fi

            choose_asked=false
            quality_unset=false

            for((i=0;i<chnl_stream_url_qualities_count;i++));
            do
                for((j=0;j<chnl_stream_urls_count;j++));
                do
                    if { [ "$auto_select" = true ] || ! [[ ${chnl_stream_url_qualities[i]} =~ - ]] || [ "${chnl_stream_urls_bitrate[j]}" == "${chnl_stream_url_qualities[i]%-*}" ]; } && [ "${chnl_stream_urls_resolution[j]}" == "${chnl_stream_url_qualities[i]#*-}" ]
                    then
                        chnl_stream_url_qualities[i]="${chnl_stream_urls_bitrate[j]}-${chnl_stream_urls_resolution[j]}"
                        chnl_stream_url_video_indices+=("$j")
                        continue 2
                    fi
                done

                Println "$error ${chnl_stream_url_qualities[i]} 不存在 !"

                if [ "$monitor" = true ] 
                then
                    quality_unset=true
                    unset 'chnl_stream_url_qualities[i]'
                    chnl_stream_url_qualities_count=$((chnl_stream_url_qualities_count-1))
                    continue
                elif [ "$choose_asked" = false ] 
                then
                    choose_asked=true
                    echo
                    inquirer list_input_index "是否按分辨率自动选择" yn_options yn_options_index

                    if [ "$yn_options_index" -eq 0 ] 
                    then
                        i=$((i-1))
                        continue
                    fi
                fi

                choose=1
                Println "$error 请重新选择 $chnl_channel_name 分辨率"
                break
            done

            if [ "$chnl_stream_url_qualities_count" -eq 0 ] 
            then
                Println "$error 请重新选择 $chnl_channel_name 分辨率"
                return 1
            fi

            if [ "$quality_unset" = true ] 
            then
                chnl_stream_url_qualities=("${chnl_stream_url_qualities[@]}")
            fi
        elif [ "$monitor" = true ] 
        then
            Println "$error 请重新选择 $chnl_channel_name 分辨率"
            return 1
        else
            choose=1
        fi

        if [ "$choose" -eq 1 ] 
        then
            if [ -z "${kind:-}" ] 
            then
                chnl_stream_urls_select_all=$((chnl_stream_urls_count+1))
                chnl_stream_urls_list="$chnl_stream_urls_list ${green}$chnl_stream_urls_select_all.${normal}${indent_6}全部\n"
                Println "$chnl_stream_urls_list"
                echo "选择分辨率 (多个分辨率用空格分隔 比如: 1 2 4-5)"
            else
                chnl_stream_urls_select_all=""
                Println "$chnl_stream_urls_list"
                echo "选择分辨率"
            fi

            while read -p "(默认: $chnl_stream_urls_count): " chnl_stream_urls_num 
            do
                chnl_stream_urls_num=${chnl_stream_urls_num:-$chnl_stream_urls_count}

                if [ "$chnl_stream_urls_num" == "$chnl_stream_urls_select_all" ] 
                then
                    chnl_stream_url_qualities=()
                    chnl_stream_url_video_indices=()

                    for((i=0;i<chnl_stream_urls_count;i++));
                    do
                        chnl_stream_url_qualities+=("${chnl_stream_urls_bitrate[i]}-${chnl_stream_urls_resolution[i]}")
                        chnl_stream_url_video_indices+=("$i")
                    done

                    chnl_stream_url_qualities_count=$chnl_stream_urls_count
                    break
                fi

                IFS=" " read -ra chnl_stream_urls_num_arr <<< "$chnl_stream_urls_num"

                error_no=0
                for chnl_stream_url_num in "${chnl_stream_urls_num_arr[@]}"
                do
                    case "$chnl_stream_url_num" in
                        *"-"*)
                            chnl_stream_url_num_start=${chnl_stream_url_num%-*}
                            chnl_stream_url_num_end=${chnl_stream_url_num#*-}
                            if [[ $chnl_stream_url_num_start == *[!0-9]* ]] || [[ $chnl_stream_url_num_end == *[!0-9]* ]] || [ "$chnl_stream_url_num_start" -eq 0 ] || [ "$chnl_stream_url_num_end" -eq 0 ] || [ "$chnl_stream_url_num_end" -gt "$chnl_stream_urls_count" ] || [ "$chnl_stream_url_num_start" -ge "$chnl_stream_url_num_end" ]
                            then
                                error_no=3
                                break
                            fi
                        ;;
                        *[!0-9]*)
                            error_no=1
                            break
                        ;;
                        *)
                            if [ "$chnl_stream_url_num" -lt 1 ] || [ "$chnl_stream_url_num" -gt "$chnl_stream_urls_count" ] 
                            then
                                error_no=2
                                break
                            fi
                        ;;
                    esac
                done

                case "$error_no" in
                    1|2|3)
                        Println "$error $i18n_input_correct_no\n"
                    ;;
                    *)
                        chnl_stream_url_qualities=()
                        chnl_stream_url_video_indices=()

                        for chnl_stream_url_num in "${chnl_stream_urls_num_arr[@]}"
                        do
                            if [[ $chnl_stream_url_num =~ - ]] 
                            then
                                start=${chnl_stream_url_num%-*}
                                end=${chnl_stream_url_num#*-}
                                for((i=start-1;i<end;i++));
                                do
                                    chnl_stream_url_qualities+=("${chnl_stream_urls_bitrate[i]}-${chnl_stream_urls_resolution[i]}")
                                    chnl_stream_url_video_indices+=("$i")
                                done
                            else
                                chnl_stream_urls_index=$((chnl_stream_url_num-1))
                                chnl_stream_url_qualities+=("${chnl_stream_urls_bitrate[chnl_stream_urls_index]}-${chnl_stream_urls_resolution[chnl_stream_urls_index]}")
                                chnl_stream_url_video_indices+=("$chnl_stream_urls_index")
                            fi
                        done

                        chnl_stream_url_qualities_count=${#chnl_stream_url_qualities[@]}
                        break
                    ;;
                esac
            done
        fi

        printf -v chnl_stream_url_quality ',%s' "${chnl_stream_url_qualities[@]}"
        chnl_stream_url_quality=${chnl_stream_url_quality:1}

        chnl_stream_links[0]="$chnl_stream_url_root|$chnl_stream_url_quality"

        if [ -n "${_4gtv_proxy_command:-}" ] 
        then
            chnl_stream_link="http://${chnl_stream_link:8}"
        fi
    else
        Println "$error 频道 [ $chnl_channel_name ] 不可用\n"
        return 1
    fi
}
