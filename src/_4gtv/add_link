Add4gtvLink()
{
    if [[ $stream_link_url =~ \.m3u8$ ]] 
    then
        Println "$error 你的 IP 可能已被禁\n"

        if [ "$monitor" = true ] 
        then
            return 0
        fi

        return 1
    fi

    stream_urls=()
    stream_urls_bitrate=()
    stream_urls_resolution=()
    stream_urls_list=""
    stream_urls_count=0

    while IFS= read -r line 
    do
        if [[ $line =~ RESOLUTION=([^ ]+) ]] 
        then
            stream_url_resolution=${BASH_REMATCH[1]%%,*}
            stream_urls_resolution+=("$stream_url_resolution")
            if [[ $line =~ BANDWIDTH=([^ ]+) ]] 
            then
                stream_url_bitrate=${BASH_REMATCH[1]%%,*}
                stream_url_bitrate=$((stream_url_bitrate/1000))
            else
                stream_url_bitrate=""
            fi
            stream_urls_bitrate+=("$stream_url_bitrate")
            if [ -n "$stream_url_bitrate" ] 
            then
                stream_url_bitrate_text=" [ $stream_url_bitrate k ]"
            else
                stream_url_bitrate_text=""
            fi
            stream_urls_count=$((stream_urls_count+1))
            stream_urls_list="$stream_urls_list ${green}$stream_urls_count.${normal}${indent_6}$stream_url_resolution$stream_url_bitrate_text\n\n"
        elif [[ $line =~ m3u8 ]] 
        then
            stream_urls+=("$stream_link_url_path/$line")
        fi
    done < <(curl -s -Lm 20 ${_4gtv_proxy_command[@]+"${_4gtv_proxy_command[@]}"} -H "User-Agent: $user_agent" -H "${headers:0:-4}" "$stream_link_url")

    if [ -n "$stream_urls_list" ] 
    then
        stream_url_root=${stream_link%%|*}

        if [[ $stream_link =~ \|([^|]+)$ ]] 
        then
            choose=0
            stream_url_quality=${BASH_REMATCH[1]}

            IFS="," read -r -a stream_url_qualities <<< "$stream_url_quality"
            stream_url_qualities_count=${#stream_url_qualities[@]}

            stream_url_video_indices=()

            for((i=0;i<stream_url_qualities_count;i++));
            do
                for((j=0;j<stream_urls_count;j++));
                do
                    if { ! [[ ${stream_url_qualities[i]} =~ - ]] || [ "${stream_urls_bitrate[j]}" == "${stream_url_qualities[i]%-*}" ]; } && [ "${stream_urls_resolution[j]}" == "${stream_url_qualities[i]#*-}" ]
                    then
                        stream_url_qualities[i]="${stream_urls_bitrate[j]}-${stream_urls_resolution[j]}"
                        stream_url_video_indices+=("$j")
                        continue 2
                    fi
                done
                Println "$error ${stream_url_qualities[i]} 不存在 !"
                choose=1
                Println "$error 请重新选择 $channel_name 分辨率"
            done
        else
            choose=1
        fi

        if [ "$choose" -eq 1 ] 
        then
            if [ -z "${kind:-}" ] 
            then
                stream_urls_select_all=$((stream_urls_count+1))
                stream_urls_list="$stream_urls_list ${green}$stream_urls_select_all.${normal}${indent_6}全部\n"
                Println "$stream_urls_list"
                echo "选择分辨率 (多个分辨率用空格分隔 比如: 1 2 4-5)"
            else
                stream_urls_select_all=""
                Println "$stream_urls_list"
                echo "选择分辨率"
            fi

            while read -p "(默认: $stream_urls_count): " stream_urls_num 
            do
                stream_urls_num=${stream_urls_num:-$stream_urls_count}

                if [ "$stream_urls_num" == "$stream_urls_select_all" ] 
                then
                    stream_url_qualities=()
                    stream_url_video_indices=()

                    for((i=0;i<stream_urls_count;i++));
                    do
                        stream_url_qualities+=("${stream_urls_bitrate[i]}-${stream_urls_resolution[i]}")
                        stream_url_video_indices+=("$i")
                    done

                    stream_url_qualities_count=$stream_urls_count
                    break
                fi

                IFS=" " read -ra stream_urls_num_arr <<< "$stream_urls_num"

                error_no=0
                for stream_url_num in "${stream_urls_num_arr[@]}"
                do
                    case "$stream_url_num" in
                        *"-"*)
                            stream_url_num_start=${stream_url_num%-*}
                            stream_url_num_end=${stream_url_num#*-}
                            if [[ $stream_url_num_start == *[!0-9]* ]] || [[ $stream_url_num_end == *[!0-9]* ]] || [ "$stream_url_num_start" -eq 0 ] || [ "$stream_url_num_end" -eq 0 ] || [ "$stream_url_num_end" -gt "$stream_urls_count" ] || [ "$stream_url_num_start" -ge "$stream_url_num_end" ]
                            then
                                error_no=3
                                break
                            fi
                        ;;
                        *[!0-9]*)
                            error_no=1
                            break
                        ;;
                        *)
                            if [ "$stream_url_num" -lt 1 ] || [ "$stream_url_num" -gt "$stream_urls_count" ] 
                            then
                                error_no=2
                                break
                            fi
                        ;;
                    esac
                done

                case "$error_no" in
                    1|2|3)
                        Println "$error $i18n_input_correct_no\n"
                    ;;
                    *)
                        stream_url_qualities=()
                        stream_url_video_indices=()

                        for stream_url_num in "${stream_urls_num_arr[@]}"
                        do
                            if [[ $stream_url_num =~ - ]] 
                            then
                                start=${stream_url_num%-*}
                                end=${stream_url_num#*-}
                                for((i=start-1;i<end;i++));
                                do
                                    stream_url_qualities+=("${stream_urls_bitrate[i]}-${stream_urls_resolution[i]}")
                                    stream_url_video_indices+=("$i")
                                done
                            else
                                stream_urls_index=$((stream_url_num-1))
                                stream_url_qualities+=("${stream_urls_bitrate[stream_urls_index]}-${stream_urls_resolution[stream_urls_index]}")
                                stream_url_video_indices+=("$stream_urls_index")
                            fi
                        done

                        stream_url_qualities_count=${#stream_url_qualities[@]}
                        break
                    ;;
                esac
            done
        fi

        printf -v stream_url_quality ',%s' "${stream_url_qualities[@]}"
        stream_url_quality=${stream_url_quality:1}
        stream_links[0]="$stream_url_root|$stream_url_quality"

        if [ -n "${_4gtv_proxy_command:-}" ] 
        then
            stream_link="http://${stream_link:8}"
        fi
    else
        Println "$error 频道 [ $channel_name ] 不可用\n"
        return 1
    fi
}
